{"version":3,"sources":["reducers/campaign.ts","reducers/appState.ts","reducers/index.ts","constants/actionType.ts","constants/text.ts","actions/index.ts","constants/ui.ts","components/Header/index.tsx","constants/config.ts","components/SearchInput/index.tsx","components/DateSelector/index.tsx","components/FilterBar/index.tsx","models/index.ts","components/SnackBar/index.tsx","helpers/index.ts","components/CampaignList/index.tsx","components/Footer/index.tsx","components/ModalPopup/index.tsx","App.tsx","serviceWorker.ts","index.tsx","assets/logo.png"],"names":["defaultCampaignState","defaultAppState","isLoading","searchKey","dateRange","startDate","endDate","snackBarDisplay","show","message","modalPopupDisplay","title","appReducer","combineReducers","appState","state","action","type","data","campaigns","campaignDataLabels","noResultInstruction","errorMessage","minLength","setSearchKey","setDateRange","setSnackBarDisplay","setModalPopupDisplay","colors","layout","styles","lineStyle","textOverflowStyle","filterBarButtonStyle","Header","HeaderWrapper","className","styled","header","Logo","config","minSearchLength","recordPerPage","snackBarLifeSpan","snackBarTransition","mediumScreenWidth","smallScreenWidth","name","budget","status","SearchInput","props","searchKeyRef","searchKeyTimer","React","createRef","onSearchKeyChange","bind","onClearSearchKey","onSearchClick","searchKeyValue","prevProps","this","setState","e","searchKeyElm","current","searchVal","value","length","clearTimeout","setTimeout","SearchWrapper","id","ref","aria-label","autoComplete","spellCheck","placeholder","onChange","onClick","icon","faTimes","faSearch","Component","connect","dispatch","div","DateSelector","setDate","onClearDateRange","onDateFilterClick","dateNow","Date","dateVal","DateSelectorWrapper","selected","date","placeholderText","disabledKeyboardNavigation","popperPlacement","popperModifiers","preventOverflow","enabled","escapeWithReference","boundariesElement","todayButton","faArrowsAltH","minDate","faCalendarCheck","FilterBar","disabled","FilterBarWrapper","CampaignStatus","SnackBar","snackBarTimer","closeHandler","close","SnackBarWrapper","join","faTimesCircle","size","transitionTime","beautifyDate","day","getDate","month","getMonth","year","getFullYear","substr","StatusDot","StatusDotWrapper","faDotCircle","span","Ongoing","Ended","Upcoming","CampaignList","filterCampaignsBySearchKey","curPage","filteredCampaigns","_campaigns","noCampaign","filter","item","_name","toLowerCase","_searchKey","includes","filterCampaignsByDateRange","_startDate","onNameClick","nameStr","hasSearchKey","hasDateRange","checkIsSearchResult","generateHeaderDescription","getPageCount","pageCount","Math","ceil","getRecordByPage","onPaginationClick","startIndex","endIndex","curPageCampaigns","slice","onHelpClick","preventDefault","curDate","filtered","dateRangeFiltered","searchKeyFiltered","dataLabels","CampaignHeaderWrapper","dangerouslySetInnerHTML","__html","CampaignTableWrapper","Object","keys","map","key","index","_item","campaignStartDateRaw","campaignEndDateRaw","num","Number","toLocaleString","style","minimumFractionDigits","maximumFractionDigits","colSpan","href","CampaignPaginationWrapper","previousLabel","faChevronLeft","nextLabel","faChevronRight","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","forcePage","onPageChange","containerClassName","activeClassName","d","css","Footer","PadWrapper","FooterWrapper","footer","ModalPopup","content","ModalPopupWrapper","App","closeSnackBar","closeModalPopup","storeCampaigns","window","EventQueue","subscribe","AddCampaignsEventName","console","log","storeCampaignData","GetHelp","Boolean","location","hostname","match","store","createStore","Root","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.f5a323c6.chunk.js","sourcesContent":["import { STORE_CAMPAIGN_DATA } from '../constants/actionType';\nimport { ActionData, CampaignData } from \"../models\";\n\n\nconst defaultCampaignState: CampaignData[] = [];\n\nexport const campaignReducer = (state = defaultCampaignState, action: ActionData) => {\n    switch (action.type) {\n        case STORE_CAMPAIGN_DATA:\n            return [\n                ...state,\n                ...action.data\n            ];\n        default:\n            return state;\n    }\n};","import {\n    SET_SEARCH_KEY,\n    SET_DATE_RANGE,\n    SET_SNACKBAR_DISPLAY,\n    SET_MODALPOPUP_DISPLAY,\n} from '../constants/actionType';\nimport { ActionData, AppStateData } from \"../models\";\n\n\nconst defaultAppState: AppStateData = {\n    isLoading: false,\n    searchKey: '',\n    dateRange: {\n        startDate: null,\n        endDate: null,\n    },\n    snackBarDisplay: {\n        show: false,\n        message: ''\n    },\n    modalPopupDisplay: {\n        show: false,\n        title: '',\n        message: ''\n    }\n};\n\nexport const appStateReducer = (state = defaultAppState, action: ActionData) => {\n    switch (action.type) {\n        case SET_SEARCH_KEY:\n            return {\n                ...state,\n                searchKey: action.data\n            };\n        case SET_DATE_RANGE:\n            return {\n                ...state,\n                dateRange: {\n                    ...state.dateRange,\n                    ...action.data\n                }\n            };\n        case SET_SNACKBAR_DISPLAY:\n            return {\n                ...state,\n                snackBarDisplay: {\n                    ...state.snackBarDisplay,\n                    ...action.data\n                }\n            };\n        case SET_MODALPOPUP_DISPLAY:\n            return {\n                ...state,\n                modalPopupDisplay: {\n                    ...state.modalPopupDisplay,\n                    ...action.data\n                }\n            };\n        default:\n            return state;\n    }\n};","import { combineReducers } from 'redux';\nimport { campaignReducer } from './campaign';\nimport { appStateReducer } from './appState';\n\n\nexport const appReducer = combineReducers({\n    appState: appStateReducer,\n    campaigns: campaignReducer,\n});","export const STORE_CAMPAIGN_DATA = 'STORE_CAMPAIGN_DATA';\nexport const SET_SEARCH_KEY = 'SET_SEARCH_KEY';\nexport const SET_DATE_RANGE = 'SET_DATE_RANGE';\nexport const SET_SNACKBAR_DISPLAY = 'SET_SNACKBAR_DISPLAY';\nexport const SET_MODALPOPUP_DISPLAY = 'SET_MODALPOPUP_DISPLAY';\n","import {config} from \"./config\";\nimport React from \"react\";\n\nconst appTitle = 'CR8 Campaign';\nconst authorName = 'Chan Wan';\nconst footerString = (year: number): string => `© ${year} ${authorName} / ${appTitle}`;\n\nconst helpTitleString = 'How to add Campaigns?';\nconst noHelpContent = 'No content at the moment';\n\nconst campaignDataLabels = {\n    name: 'Name',\n    startDate: 'Start Date',\n    endDate: 'End Date',\n    budget: 'Budget (USD)',\n    status: 'Status',\n};\n\nconst searchBarPlaceholder = 'Search Campaign';\nconst startDateLabel = 'Start Date';\nconst endDateLabel = 'End Date';\nconst startDatePlaceholder = 'Select your start date';\nconst endDatePlaceholder = 'Select your end date';\nconst todayButtonText = 'Today';\n\nconst campaignResultTitle = 'Campaign list';\nconst legendTitle = 'Status Type';\nconst searchNoResult = 'No campaigns found!';\nconst searchNoResultInstruction = 'Please try again.';\nconst noResult = 'No campaigns available.';\nconst noResultInstruction = {\n    beforeLink: 'Click ',\n    afterLink: ' to learn how to add new campaigns via Web Development tools.',\n    linkLabel: 'here',\n};\n\nconst errorMessage = {\n    searchLengthShort: (minLength: number) => `Search length is too short. Please enter at least ${minLength} characters`,\n    startDateEarlier: 'Start date cannot be later than end date.'\n};\n\nexport {\n    appTitle,\n    footerString,\n    helpTitleString,\n    noHelpContent,\n\n    campaignDataLabels,\n    searchBarPlaceholder,\n    startDateLabel,\n    endDateLabel,\n    startDatePlaceholder,\n    endDatePlaceholder,\n    todayButtonText,\n\n    campaignResultTitle,\n    legendTitle,\n    searchNoResult,\n    searchNoResultInstruction,\n    noResult,\n    noResultInstruction,\n\n    errorMessage,\n}","import {\n    SET_SEARCH_KEY,\n    SET_DATE_RANGE,\n    STORE_CAMPAIGN_DATA,\n    SET_SNACKBAR_DISPLAY,\n    SET_MODALPOPUP_DISPLAY,\n} from \"../constants/actionType\";\nimport {\n    CampaignData,\n    SnackBarData,\n    DateRangeData,\n    ModalPopupData\n} from \"../models\";\n\n\nexport const storeCampaignData = (data: CampaignData[]) => ({ type: STORE_CAMPAIGN_DATA, data });\nexport const setSearchKey = (data: string) => ({ type: SET_SEARCH_KEY, data });\nexport const setDateRange = (data: DateRangeData) => ({ type: SET_DATE_RANGE, data });\nexport const setSnackBarDisplay = (data: SnackBarData) => ({ type: SET_SNACKBAR_DISPLAY, data });\nexport const setModalPopupDisplay = (data: ModalPopupData) => ({ type: SET_MODALPOPUP_DISPLAY, data });\n","const colors = {\n    primary: '#43cadb',\n    secondary: '#595caf',\n    white: '#fff',\n    black: '#000',\n    darkGray: '#666',\n    gray: '#ddd',\n    lightGray: '#f6f6f6',\n    lightGray2: '#eee',\n    green: '#4caf50',\n    red: '#ff2717',\n    yellow: '#ffc107',\n    blue: '#03a9f4',\n};\n\nconst layout = {\n    xSmallGap: '0.3125rem',\n    smallGap: '0.625rem',\n    standardGap: '1rem',\n    largeGap: '1.25rem',\n    borderRadius: '4px',\n\n    fontSizeSmall: '0.75rem',\n    fontSizeStandard: '0.875rem',\n    fontSizeMedium: '1rem',\n    fontSizeLarge: '1.25rem',\n    fontSizeXLarge: '1.5rem',\n\n    headerBarHeight: '4.5rem',\n    footerBarHeight: '2rem',\n    filterBarHeight: '4.5rem',\n};\n\nconst styles = {\n    lineStyle: `1px solid ${colors.gray}`,\n    textOverflowStyle: `\n        white-space: nowrap;\n        text-overflow: ellipsis;\n        overflow: hidden;\n    `,\n\n    filterBarButtonStyle: `\n        width: ${layout.filterBarHeight};\n        height: ${layout.filterBarHeight};\n        padding: 0;\n        border: 0;\n        background-color: transparent;\n        font-size: ${layout.fontSizeXLarge};\n        cursor: pointer;\n        \n        &:hover {\n            background-color: ${colors.lightGray};\n        }\n        \n        &:focus {\n            outline: none;\n        }\n    `\n};\n\n\nexport {\n    colors,\n    layout,\n    styles,\n}","import React, { ReactElement } from 'react';\nimport styled from 'styled-components';\nimport { colors, layout } from \"../../constants/ui\";\nimport { Logo } from \"../../assets\";\n\n\ntype HeaderProps = {\n    title: string,\n}\n\nexport const Header = ({ title }: HeaderProps): ReactElement => (\n    <HeaderWrapper className=\"app-header\">\n        <div className=\"logo\" />\n        <h1>{ title }</h1>\n    </HeaderWrapper>\n);\n\n\nconst HeaderWrapper = styled.header`\n    display: flex;\n    height: ${layout.headerBarHeight};\n    background: ${colors.primary}; \n    color: ${colors.white};\n    \n    & .logo {\n        width: ${layout.headerBarHeight};\n        height: ${layout.headerBarHeight};\n        background: ${colors.black} url(${Logo}) center / cover no-repeat;\n    }\n    \n    & > h1 {\n        padding: ${layout.largeGap};\n        margin: 0;\n    }\n`;","import {campaignDataLabels} from \"./text\";\n\nexport const config = {\n    minSearchLength: 3,\n    recordPerPage: 5,\n\n    snackBarLifeSpan: 5000,\n    snackBarTransition: 250,\n\n    mediumScreenWidth: '37.5rem',\n    smallScreenWidth: '25rem',\n\n    campaignDataLabels: {\n        name: campaignDataLabels.name,\n        startDate: campaignDataLabels.startDate,\n        endDate: campaignDataLabels.endDate,\n        budget: campaignDataLabels.budget,\n        status: campaignDataLabels.status,\n    }\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport styled from \"styled-components\";\nimport { layout, styles} from '../../constants/ui';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from '@fortawesome/free-solid-svg-icons/faSearch'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons/faTimes'\nimport { setSearchKey, setSnackBarDisplay } from \"../../actions\";\nimport { ReducerStateData, SnackBarData } from '../../models';\nimport { config } from \"../../constants/config\";\nimport { errorMessage, searchBarPlaceholder } from \"../../constants/text\";\n\n\ntype SearchInputState = {\n    searchKeyValue: string\n}\n\nexport class SearchInput extends React.Component<any, SearchInputState> {\n    private searchKeyRef: React.RefObject<HTMLInputElement>;\n    private searchKeyTimer: ReturnType<typeof setTimeout> = 0;\n\n    constructor(props: any) {\n        super(props);\n\n        this.searchKeyRef = React.createRef();\n        this.onSearchKeyChange = this.onSearchKeyChange.bind(this);\n        this.onClearSearchKey = this.onClearSearchKey.bind(this);\n        this.onSearchClick = this.onSearchClick.bind(this);\n\n        this.state = {\n            searchKeyValue: ''\n        }\n    }\n\n    componentDidUpdate(prevProps: any) {\n        const { appState } = this.props;\n\n        if(!!prevProps.appState && !!appState) {\n            if(prevProps.appState.searchKey !== appState.searchKey) {\n                this.setState({ searchKeyValue: appState.searchKey });\n            }\n        }\n    }\n\n    onSearchClick(e?: React.MouseEvent | undefined) {\n        const searchKeyElm = this.searchKeyRef.current;\n        if(!!searchKeyElm) {\n            const searchVal = searchKeyElm.value;\n\n            if(searchVal.length < config.minSearchLength) {\n                if(!!e) {\n                    // NOTE: if e doesn't exist, it is called from onChange event\n                    const { setSnackBarDisplay } = this.props;\n                    setSnackBarDisplay({\n                        show: true,\n                        message: errorMessage.searchLengthShort(config.minSearchLength)\n                    });\n                }\n                return;\n            }\n\n            const { setSearchKey } = this.props;\n            setSearchKey(searchVal);\n        }\n    };\n\n    onSearchKeyChange() {\n        const searchKeyElm = this.searchKeyRef.current;\n        if(!!searchKeyElm) {\n            this.setState({searchKeyValue: searchKeyElm.value});\n\n            if(searchKeyElm.value === '') {\n                this.onClearSearchKey();\n            }\n        }\n\n        clearTimeout(this.searchKeyTimer);\n        this.searchKeyTimer = setTimeout(() => {\n            this.onSearchClick();\n        }, 500)\n    };\n\n    onClearSearchKey() {\n        const { setSearchKey } = this.props;\n        setSearchKey('');\n    };\n\n    render() {\n        const { searchKeyValue } = this.state;\n        const { appState } = this.props;\n\n        return (\n            <SearchWrapper className=\"search-input\">\n                <input type=\"text\"\n                    id=\"searchKey\"\n                    name=\"searchKey\"\n                    ref={this.searchKeyRef}\n                    aria-label=\"Search Input\"\n                    autoComplete=\"off\"\n                    spellCheck={false}\n                    placeholder={searchBarPlaceholder}\n                    onChange={this.onSearchKeyChange}\n                    value={searchKeyValue}\n                />\n                { !!appState && appState.searchKey !== ''\n                    ? <button id=\"clearSearch\" onClick={this.onClearSearchKey}><FontAwesomeIcon icon={faTimes} /></button>\n                    : <button id=\"goSearch\" onClick={this.onSearchClick}><FontAwesomeIcon icon={faSearch} /></button>\n                }\n            </SearchWrapper>\n        )\n    }\n}\n\nconst mapStateToProps = (state: ReducerStateData) => {\n    return ({ appState: state.appState })\n};\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    setSearchKey: (data: string) => dispatch(setSearchKey(data)),\n    setSnackBarDisplay: (data: SnackBarData) => dispatch(setSnackBarDisplay(data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchInput);\n\n\n\nconst SearchWrapper = styled.div`\n    display: flex;\n    width: 100%;\n    align-item: center;\n    \n    & #searchKey {\n        width: calc(100% - ${layout.filterBarHeight});\n        padding: ${layout.largeGap};\n        border: 0;\n        font-size: ${layout.fontSizeStandard};\n        \n        &:focus {\n            outline: none;\n        }\n    }\n    \n    & > button {\n        ${styles.filterBarButtonStyle};\n    }\n`;","import React from 'react';\nimport { connect } from 'react-redux';\nimport styled from \"styled-components\";\nimport DatePicker from \"react-datepicker\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCalendarCheck } from '@fortawesome/free-solid-svg-icons/faCalendarCheck'\nimport { faArrowsAltH } from '@fortawesome/free-solid-svg-icons/faArrowsAltH'\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons/faTimes\";\nimport { colors, layout, styles } from '../../constants/ui';\nimport { setSnackBarDisplay, setDateRange } from \"../../actions\";\nimport { DateRangeData, ReducerStateData, SnackBarData } from '../../models';\nimport {\n    endDateLabel,\n    endDatePlaceholder,\n    errorMessage,\n    startDateLabel,\n    startDatePlaceholder,\n    todayButtonText\n} from \"../../constants/text\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n\ntype DateSelectorProps = {\n    [key:string]: any\n}\n\nexport class DateSelector extends React.Component<DateSelectorProps, any> {\n    constructor(props: DateSelectorProps) {\n        super(props);\n\n        this.setDate = this.setDate.bind(this);\n        this.onClearDateRange = this.onClearDateRange.bind(this);\n        this.onDateFilterClick = this.onDateFilterClick.bind(this);\n\n        const dateNow: Date = new Date();\n\n        this.state = {\n            dateNow,\n            startDate: dateNow,\n            endDate: dateNow,\n        };\n    }\n\n    componentDidUpdate(prevProps: any) {\n        const { appState } = this.props;\n        const { dateRange } = appState;\n\n        if(prevProps.appState.dateRange.startDate !== dateRange.startDate) {\n            if(!dateRange.startDate) {\n                // NOTE: startDate is null\n                this.onClearDateRange();\n            }\n        }\n    }\n\n    onDateFilterClick(e?: React.MouseEvent | undefined) {\n        const { startDate, endDate } = this.state;\n\n        if(startDate > endDate) {\n            const { setSnackBarDisplay } = this.props;\n            setSnackBarDisplay({\n                show: true,\n                message: errorMessage.startDateEarlier\n            });\n            return;\n        }\n\n        const { setDateRange } = this.props;\n        setDateRange({\n            startDate,\n            endDate,\n        });\n    };\n\n    setDate(dateVal: Date, type: string) {\n        this.setState({ [type]: dateVal }, () => {\n            const { startDate, endDate } = this.state;\n            if(startDate > endDate) {\n                this.setState({ endDate: startDate }, () => {\n                    this.onDateFilterClick();\n                });\n            } else {\n                this.onDateFilterClick();\n            }\n        });\n    };\n\n    onClearDateRange() {\n        const { dateNow } = this.state;\n        const { setDateRange } = this.props;\n        setDateRange({ startDate: null, endDate: null });\n        this.setState({\n            startDate: dateNow,\n            endDate: dateNow\n        });\n    };\n\n    render() {\n        const { startDate, endDate } = this.state;\n        const { appState } = this.props;\n        const { dateRange } = appState;\n\n        return (\n            <DateSelectorWrapper className=\"date-selector\">\n                <div className=\"date-area\">\n                    <div className=\"date-col start-date\">\n                        <div className=\"label\">{startDateLabel}</div>\n                        <DatePicker\n                            id=\"startDatePicker\"\n                            selected={startDate}\n                            onChange={(date: Date) => this.setDate(date, 'startDate')}\n                            placeholderText={startDatePlaceholder}\n                            disabledKeyboardNavigation\n                            popperPlacement=\"bottom\"\n                            popperModifiers={{\n                                preventOverflow: {\n                                    enabled: true,\n                                    escapeWithReference: false,\n                                    boundariesElement: \"viewport\"\n                                }\n                            }}\n                            todayButton={todayButtonText}\n                            className=\"datepicker-input\"\n                        />\n                    </div>\n                    <div className=\"icon-range\">\n                        <FontAwesomeIcon icon={faArrowsAltH} />\n                    </div>\n                    <div className=\"date-col end-date\">\n                        <div className=\"label\">{endDateLabel}</div>\n                        <DatePicker\n                            id=\"endDatePicker\"\n                            selected={endDate < startDate ? startDate : endDate}\n                            onChange={(date: Date) => this.setDate(date, 'endDate')}\n                            minDate={startDate}\n                            placeholderText={endDatePlaceholder}\n                            disabledKeyboardNavigation\n                            popperPlacement=\"bottom\"\n                            popperModifiers={{\n                                preventOverflow: {\n                                    enabled: true,\n                                    escapeWithReference: false,\n                                    boundariesElement: \"viewport\"\n                                }\n                            }}\n                            todayButton={todayButtonText}\n                            className=\"datepicker-input\"\n                        />\n                    </div>\n                </div>\n                { !!dateRange.startDate || !!dateRange.endDate\n                    ? <button id=\"clearDateRange\" onClick={this.onClearDateRange}><FontAwesomeIcon icon={faTimes} /></button>\n                    : <button id=\"goFilter\" onClick={this.onDateFilterClick}><FontAwesomeIcon icon={faCalendarCheck} /></button>\n                }\n            </DateSelectorWrapper>\n        );\n    }\n}\n\nconst mapStateToProps = (state: ReducerStateData) => {\n    return ({ appState: state.appState })\n};\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    setDateRange: (data: DateRangeData) => dispatch(setDateRange(data)),\n    setSnackBarDisplay: (data: SnackBarData) => dispatch(setSnackBarDisplay(data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DateSelector);\n\n\n\nconst DateSelectorWrapper = styled.div`\n    display: flex;\n    width: 100%;\n    align-items: center;\n    \n    & .date-area {\n        display: flex;\n        width: calc(100% - ${layout.filterBarHeight});\n        padding: 0 ${layout.largeGap};\n        box-sizing: border-box;\n        align-items: center;\n        justify-content: space-between;\n    }\n    \n    & .date-col {\n        box-sizing: border-box;\n        font-size: ${layout.fontSizeStandard};\n        \n        & > .label {\n            margin-bottom: ${layout.xSmallGap};\n            font-size: ${layout.fontSizeSmall};\n            font-weight: 500;\n        }\n    }\n    \n    & .icon-range {\n        padding: 1.4rem 3px 0;\n    }\n    \n    & > button {\n        ${styles.filterBarButtonStyle};\n    }\n    \n    & .react-datepicker__triangle {\n        left: 50%;\n        display: none;\n    }\n    \n    & .react-datepicker__input-container {\n        & > input[type=\"text\"] {\n            width: 6rem;\n            padding: ${layout.xSmallGap} ${layout.smallGap};\n            border: ${styles.lineStyle};\n            font-size: ${layout.fontSizeStandard};\n            text-align: center;\n            background-color: ${colors.lightGray};\n            box-sizing: border-box;\n            \n            &:focus {\n                outline: none;\n            }\n        }\n    }\n`;","import React from 'react';\nimport styled from 'styled-components';\nimport { layout, styles } from \"../../constants/ui\";\nimport SearchInput from \"../SearchInput\";\nimport DateSelector from \"../DateSelector\";\nimport { config } from \"../../constants/config\";\n\n\ntype FilterBarProps = {\n    disabled: boolean,\n}\n\nexport const FilterBar = ({ disabled }: FilterBarProps = { disabled: true }): JSX.Element => (\n    <FilterBarWrapper className=\"app-filter\">\n        <div className=\"column search-panel\">\n            <SearchInput />\n        </div>\n        <div className=\"column date-panel\">\n            <DateSelector />\n        </div>\n        { !!disabled && <div className=\"overlay\" /> }\n    </FilterBarWrapper>\n);\n\n\nconst datePanelWidth: string = '23em';\n\nconst FilterBarWrapper = styled.div`\n    position: relative;\n    display: flex;\n    height: ${layout.filterBarHeight};\n    border-bottom: ${styles.lineStyle};\n    justify-content: space-between;\n    align-items: center;\n    \n    & .overlay {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background-color: rgba(255, 255, 255, 0.7);\n    }\n    \n    & .column {\n        box-sizing: border-box;\n    }\n    \n    & .search-panel {\n        width: calc(100% - ${datePanelWidth});\n        border-right: ${styles.lineStyle};\n    }\n    \n    & .date-panel {\n        width: ${datePanelWidth};\n    }\n    \n    @media screen and (max-width: ${config.mediumScreenWidth}) {\n        display: block;\n        height: auto;\n\n        & .search-panel, \n        & .date-panel {\n            width: 100%;\n            padding: 0 10%;\n            box-sizing: border-box;\n        }\n                \n        & .search-panel {\n            border-right: 0;\n            border-bottom: ${styles.lineStyle};\n        }\n    }\n    \n    @media screen and (max-width: ${config.smallScreenWidth}) {\n        & .search-panel, \n        & .date-panel {\n            padding: 0;\n        }\n    }\n`;","export interface CampaignData {\n    id: number;\n    name: string;\n    startDate: Date;\n    endDate: Date;\n    budget: number;\n}\n\nexport type SnackBarData = {\n    show: boolean;\n    message?: string;\n}\n\nexport type ModalPopupData = {\n    show: boolean,\n    title?: string,\n    message?: string;\n}\n\nexport type DateRangeData = {\n    startDate: Date | null;\n    endDate: Date | null;\n}\n\nexport type AppStateData = {\n    [key: string]: any\n};\n\nexport type ActionData = {\n    type: string;\n    data: any;\n}\n\nexport type ReducerStateData = {\n    campaigns: CampaignData[];\n    appState: AppStateData;\n}\n\nexport enum CampaignStatus {\n    Ongoing = 'ongoing',\n    Ended = 'ended',\n    Upcoming = 'upcoming',\n}","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { colors, layout, styles } from \"../../constants/ui\";\nimport { config } from \"../../constants/config\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons/faTimesCircle\";\n\n\ntype SnackBarProps = {\n    show: boolean,\n    message: string,\n    close?: () => void\n}\n\nclass SnackBar extends Component<SnackBarProps, {}> {\n    private snackBarTimer: ReturnType<typeof setTimeout> = 0;\n\n    constructor(props: any) {\n        super(props);\n        this.closeHandler = this.closeHandler.bind(this);\n    }\n\n    closeHandler = () => {\n        const { close } = this.props;\n        if(!!close) close();\n    };\n\n    componentDidUpdate(prevProps: SnackBarProps) {\n        const { show } = this.props;\n\n        if(prevProps.show !== show) {\n            if(!!show) {\n                if(!!this.snackBarTimer) {\n                    clearTimeout(this.snackBarTimer);\n                }\n                this.snackBarTimer = setTimeout(() => {\n                    this.closeHandler();\n                }, config.snackBarLifeSpan);\n            }\n        }\n    }\n\n    render() {\n        const { show, message } = this.props;\n\n        return (\n            <SnackBarWrapper\n                className={[\n                    'snackbar',\n                    !!show ? ` show` : '',\n                ].join('')}\n            >\n                <div className=\"content\">{message}</div>\n                <div className=\"close\" onClick={this.closeHandler}>\n                    <FontAwesomeIcon icon={faTimesCircle} size={'lg'} />\n                </div>\n            </SnackBarWrapper>\n        )\n    }\n}\n\nexport default SnackBar;\n\n\nconst closeSize = '20px';\nconst transitionTime = config.snackBarTransition;\nconst SnackBarWrapper = styled.div`\n    display: flex;\n    position: fixed;\n    top: -200px;\n    right: ${layout.standardGap};\n    max-width: calc(100% - 2 * ${layout.standardGap});\n    min-width: 300px;\n    padding: ${layout.smallGap} ${layout.standardGap};\n    border-radius: ${layout.borderRadius};\n    box-sizing: border-box;\n    color: ${colors.white};\n    background-color: ${colors.black};\n    justify-content: space-between;\n    transition: top ${transitionTime * 2}ms;\n    \n    &.show {\n        top: ${layout.standardGap};\n        transition: top ${transitionTime}ms;\n    }\n    \n    & > .content {\n        width: calc(100% - ${closeSize});\n        margin-right: ${layout.standardGap};\n        line-height: ${closeSize};\n        font-size: ${layout.fontSizeStandard};\n        font-weight: 400;\n        ${styles.textOverflowStyle}\n    }\n    \n    & > .close {\n        height: ${closeSize};\n        width: ${closeSize};\n        \n        & * {\n            cursor: pointer;\n        }\n    }\n`;","const convertToCurrency = (num: number) => Number(num).toLocaleString('en-US', { style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2 });\n\nconst compareObject = (obj1: any, obj2: any) => {\n    // NOTE: sort the object by key first before comparing\n    const _obj1 = sortObjectByKey(obj1);\n    const _obj2 = sortObjectByKey(obj2);\n\n    return (JSON.stringify(_obj1) === JSON.stringify(_obj2));\n};\n\nconst sortObjectByKey = (obj: any) => {\n    const sorted:any = {};\n    Object.keys(obj).sort().forEach((key) => {\n        sorted[key] = obj[key];\n    });\n\n    return sorted;\n};\n\n\nconst sortArrayByObjectKeyValue = (objArr: any, key: string) => {\n    objArr.sort((a: any, b: any) => {\n        const keyA = a[key];\n        const keyB = b[key];\n        if(keyA > keyB) return 1;\n        if(keyA < keyB) return -1;\n        return 0;\n    });\n};\n\nconst beautifyDate = (date: Date) => {\n    const monthArr = ['January', 'February', 'March', 'April', 'May', 'June', 'July',\n        'August', 'September', 'October', 'November', 'December'];\n\n    const day = date.getDate();\n    const month = date.getMonth();\n    const year = date.getFullYear();\n\n    return day + ' ' + monthArr[month].substr(0, 3) + ' ' + year;\n};\n\nexport {\n    convertToCurrency,\n    compareObject,\n    sortArrayByObjectKeyValue,\n    beautifyDate,\n}","/*\n* Todo:\n* - change method to non arrow\n* - refactor text\n* */\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport styled, { css } from \"styled-components\";\nimport ReactPaginate from 'react-paginate';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faDotCircle } from \"@fortawesome/free-solid-svg-icons/faDotCircle\";\nimport { faChevronLeft } from \"@fortawesome/free-solid-svg-icons/faChevronLeft\";\nimport { faChevronRight } from \"@fortawesome/free-solid-svg-icons/faChevronRight\";\nimport {\n    colors,\n    layout,\n    styles\n} from '../../constants/ui';\nimport {\n    setDateRange, setModalPopupDisplay,\n    setSearchKey,\n    setSnackBarDisplay\n} from \"../../actions\";\nimport {\n    CampaignData,\n    CampaignStatus,\n    DateRangeData, ModalPopupData,\n    ReducerStateData,\n    SnackBarData\n} from '../../models';\nimport { config } from \"../../constants/config\";\nimport { beautifyDate, convertToCurrency } from \"../../helpers\";\nimport {\n    campaignResultTitle,\n    legendTitle,\n    noResult, noResultInstruction,\n    searchNoResult,\n    searchNoResultInstruction\n} from \"../../constants/text\";\n\n\ninterface StatusDotProps {\n    status: string,\n}\nconst StatusDot: React.FC<StatusDotProps> = (props) => (\n    <StatusDotWrapper className={`status-dot ${props.status}`}>\n        <FontAwesomeIcon icon={faDotCircle} />\n        <span>{props.status}</span>\n    </StatusDotWrapper>\n);\n\nconst StatusDotWrapper = styled.span`\n    & > span { \n        display: none;\n    }\n\n    &.${CampaignStatus.Ongoing} {\n        color: ${colors.green};\n    }\n    \n    &.${CampaignStatus.Ended} {\n        color: ${colors.red};\n    }\n    \n    &.${CampaignStatus.Upcoming} {\n        color: ${colors.yellow};\n    }\n    \n    @media screen and (max-width: ${config.smallScreenWidth}) {\n        & > span { \n            display: inline-block;\n            margin-left: ${layout.xSmallGap};\n            line-height: 1rem;\n        }\n    }    \n`;\n\n\ntype CampaignListProps = {\n    [key:string]: any\n}\n\ntype CampaignListState = {\n    curDate: Date,\n    filteredCampaigns: CampaignData[],\n    pageCount: number,\n    curPage: number,\n    curPageCampaigns: CampaignData[],\n}\n\nexport class CampaignList extends React.Component<CampaignListProps, CampaignListState> {\n    constructor(props: CampaignListProps) {\n        super(props);\n\n        this.state = {\n            filteredCampaigns: [],\n            curDate: new Date(),\n            pageCount: 0,\n            curPage: 0,\n            curPageCampaigns: [],\n        };\n    }\n\n    componentDidUpdate(prevProps: any) {\n        const { appState, campaigns } = this.props;\n        const { dateRange } = appState;\n\n        // NOTE: for adding campaigns\n        if(prevProps.campaigns !== campaigns) {\n            if(campaigns.length > 0) {\n                this.setState({\n                    filteredCampaigns: campaigns\n                }, () => this.getPageCount());\n            }\n            return;\n            // NOTE: if updates are due to campaign list change, no need to further continue\n        }\n\n        // NOTE: for searchKey results\n        if(prevProps.appState.searchKey !== appState.searchKey) {\n            if( appState.searchKey !== '') {\n                const filtered = this.filterCampaignsBySearchKey(appState.searchKey);\n                this.setState({\n                    filteredCampaigns: filtered\n                }, () => this.getPageCount());\n            } else {\n                // NOTE: searchKey is cleared\n                if(!!dateRange.startDate && !!dateRange.endDate) {\n                    const dateRangeFiltered = this.filterCampaignsByDateRange(dateRange.startDate, dateRange.endDate);\n                    this.setState({\n                        filteredCampaigns: dateRangeFiltered\n                    }, () => this.getPageCount());\n                } else {\n                    this.setState({\n                        filteredCampaigns: campaigns.length > 0 ? campaigns : []\n                    }, () => this.getPageCount());\n                }\n            }\n        }\n\n        // NOTE: for dateRange results\n        if( (prevProps.appState.dateRange.startDate !== dateRange.startDate) ||\n            (prevProps.appState.dateRange.endDate !== dateRange.endDate)\n        ) {\n            // NOTE: either of the dates not equal, then should update result\n            if(!!dateRange.startDate && !!dateRange.endDate) {\n                const filtered = this.filterCampaignsByDateRange(dateRange.startDate, dateRange.endDate);\n                this.setState({\n                    filteredCampaigns: filtered\n                }, () => this.getPageCount());\n            } else {\n                // NOTE: dateRange is cleared\n                if(appState.searchKey !== '') {\n                    const searchKeyFiltered = this.filterCampaignsBySearchKey(appState.searchKey);\n                    this.setState({\n                        filteredCampaigns: searchKeyFiltered\n                    }, () => this.getPageCount());\n                } else {\n                    this.setState({\n                        filteredCampaigns: campaigns.length > 0 ? campaigns : []\n                    }, () => this.getPageCount());\n                }\n            }\n        }\n    }\n\n    filterCampaignsBySearchKey = (searchKey: string) => {\n        this.setState({ curPage: 0 });\n\n        const { filteredCampaigns } = this.state;\n        const { appState, campaigns } = this.props;\n        let _campaigns: CampaignData[] = [];\n\n        if(!!appState.dateRange.startDate || !!appState.dateRange.endDate) {\n            // NOTE: search will filter based on dateRange results\n            _campaigns = filteredCampaigns;\n        } else {\n            _campaigns = campaigns;\n        }\n\n        if(_campaigns.length === 0) {\n            return this.noCampaign('searchKey');\n        }\n\n        return _campaigns.filter((item: CampaignData) => {\n            const _name = item.name.toLowerCase();\n            const _searchKey = searchKey.toLowerCase();\n            return _name.includes(_searchKey);\n        });\n    };\n\n    filterCampaignsByDateRange = (startDate: Date, endDate: Date) => {\n        this.setState({ curPage: 0 });\n\n        const { filteredCampaigns } = this.state;\n        const { appState, campaigns } = this.props;\n        let _campaigns: CampaignData[] = [];\n\n        if(appState.searchKey !== '') {\n            // NOTE: search will filter based on searchKey results\n            _campaigns = filteredCampaigns;\n        } else {\n            _campaigns = campaigns;\n        }\n\n        if(_campaigns.length === 0) {\n            return this.noCampaign('dateRange');\n        }\n\n        return _campaigns.filter((item: CampaignData) => {\n            const _startDate = new Date(item.startDate);\n            const _endDate = new Date(item.endDate);\n\n            if(_endDate < startDate) { // NOTE: campaign already ended\n                return false;\n            } else {\n                if(_startDate > endDate) { // NOTE: campaign haven't started\n                    return false;\n                }\n            }\n            return true;\n        });\n    };\n\n    noCampaign = (type: string): [] => {\n        const { setSearchKey, setDateRange } = this.props;\n        if(type === 'searchKey') setSearchKey('');\n        if(type === 'dateRange') setDateRange({ startDate: null, endDate: null });\n        return [];\n    };\n\n    onNameClick = (nameStr: string) => {\n        const { setSearchKey } = this.props;\n        setSearchKey(nameStr.toLowerCase());\n    };\n\n    hasSearchKey = () => this.props.appState.searchKey !== '';\n\n    hasDateRange = () => !!this.props.appState.dateRange.startDate;\n    // NOTE: as long has startDate, the code will store endDate\n\n    checkIsSearchResult = () => (this.hasSearchKey() || this.hasDateRange());\n\n    generateHeaderDescription = () => {\n        const { filteredCampaigns } = this.state;\n        const { appState } = this.props;\n        const { searchKey, dateRange } = appState;\n\n        return 'Results for' + (\n            this.checkIsSearchResult() ? [\n                ` campaign's`,\n                (this.hasSearchKey() ? ` name with \"<span>${searchKey}</span>\"` : ''),\n                (this.hasSearchKey() && this.hasDateRange() ? ' and ' : ''),\n                (this.hasDateRange()\n                    ? ` period between <span>${beautifyDate(dateRange.startDate)} - ${beautifyDate(dateRange.endDate)}</span>`\n                    : '')\n            ].join('') : ' <span>all</span> campaigns') +\n            ` (${filteredCampaigns.length} entr${filteredCampaigns.length > 1 ? 'ies' : 'y'})`;\n    };\n\n    getPageCount = () => {\n        const { filteredCampaigns } = this.state;\n        this.setState({\n            pageCount: Math.ceil(filteredCampaigns.length / config.recordPerPage)\n        }, () => this.getRecordByPage());\n    };\n\n    onPaginationClick = (data: any) => {\n        this.setState({\n            curPage: data.selected\n        }, () => { this.getRecordByPage() });\n    };\n\n    getRecordByPage = () => {\n        const { filteredCampaigns, curPage } = this.state;\n\n        const startIndex = curPage * config.recordPerPage;\n        let endIndex = ((curPage + 1) * config.recordPerPage);\n        if(endIndex > filteredCampaigns.length) {\n            endIndex = filteredCampaigns.length;\n        }\n\n        const curPageCampaigns = filteredCampaigns.slice(startIndex, endIndex);\n\n        this.setState({ curPageCampaigns });\n    };\n\n    onHelpClick = (e: React.MouseEvent) => {\n        e.preventDefault();\n        const { setModalPopupDisplay } = this.props;\n        setModalPopupDisplay({ show: true });\n    };\n\n    render() {\n        const { appState } = this.props;\n        const { curDate, curPageCampaigns } = this.state;\n        const dataLabels: { [key:string]: string } = config.campaignDataLabels;\n\n        return (\n            <>\n                <CampaignHeaderWrapper className=\"campaign-header\">\n                    <div className=\"title\">\n                        <h2>{campaignResultTitle}</h2>\n                        <div className=\"description\"\n                            dangerouslySetInnerHTML={{__html: this.generateHeaderDescription()}} />\n                    </div>\n                    <div className=\"legend\">\n                        <div className=\"legend-title\">{legendTitle}</div>\n                        <div className=\"legend-row\">\n                            <div className=\"col\">\n                                <div className=\"label\">{ CampaignStatus.Ongoing }</div>\n                                <StatusDot status={CampaignStatus.Ongoing} />\n                            </div>\n                            <div className=\"col\">\n                                <div className=\"label\">{ CampaignStatus.Ended }</div>\n                                <StatusDot status={CampaignStatus.Ended} />\n                            </div>\n                            <div className=\"col\">\n                                <div className=\"label\">{ CampaignStatus.Upcoming }</div>\n                                <StatusDot status={CampaignStatus.Upcoming} />\n                            </div>\n                        </div>\n                    </div>\n                </CampaignHeaderWrapper>\n                <CampaignTableWrapper\n                    className=\"campaign-table\"\n                    dataLabels={dataLabels}\n                >\n                    <table>\n                        <thead>\n                            <tr>\n                                { Object.keys(dataLabels).map((key: string) => <td key={key}>{dataLabels[key]}</td>) }\n                            </tr>\n                        </thead>\n                        <tbody>\n                            { !!curPageCampaigns && curPageCampaigns.length > 0 ? (<>\n                                { curPageCampaigns.map((item, index) => {\n                                    const _item: any = item;\n                                    const campaignStartDateRaw = new Date(_item.startDate);\n                                    const campaignEndDateRaw = new Date(_item.endDate);\n\n                                    let status: string = campaignStartDateRaw > curDate\n                                        ? CampaignStatus.Upcoming\n                                        : campaignEndDateRaw < curDate\n                                            ? CampaignStatus.Ended\n                                            : CampaignStatus.Ongoing;\n\n                                    return (\n                                        <tr key={index}>\n                                            { Object.keys(dataLabels).map((key: string) => {\n                                                switch(key) {\n                                                    case 'status':\n                                                        return <td key={key}><StatusDot status={status} /></td>;\n                                                    case 'name':\n                                                        return <td key={key}>\n                                                            <a title=\"Click to search for campaign with same name\"\n                                                                onClick={() => this.onNameClick(_item[key])}\n                                                            >{_item[key]}</a>\n                                                        </td>;\n                                                    case 'startDate':\n                                                    case 'endDate':\n                                                        return <td key={key}>{beautifyDate(new Date(_item[key]))}</td>;\n                                                    case 'budget':\n                                                        return <td key={key}>{convertToCurrency(+_item[key])}</td>;\n                                                    default:\n                                                        return <td key={key}>{_item[key]}</td>;\n                                                }\n                                            }) }\n                                        </tr>\n                                    )\n                                })}</>\n                            ) : (\n                                <tr className=\"no-result\">\n                                    <td colSpan={Object.keys(dataLabels).length}>\n                                        { ( !!appState && (\n                                            appState.searchKey !== '' || (\n                                                !!appState.dateRange.startDate ||\n                                                !!appState.dateRange.endDate\n                                            )\n                                        )) ? (<>\n                                            <div className=\"highlight\">{searchNoResult}</div>\n                                            {searchNoResultInstruction}</>\n                                        ) : (<>\n                                            <div className=\"highlight\">{noResult}</div>\n                                            {noResultInstruction.beforeLink}\n                                            <a onClick={(e) => this.onHelpClick(e)} href=\"#\">{noResultInstruction.linkLabel}</a>\n                                            {noResultInstruction.afterLink}</>\n                                        )}\n                                    </td>\n                                </tr>\n                            )}\n                        </tbody>\n                    </table>\n                </CampaignTableWrapper>\n\n                { curPageCampaigns.length > 0 && (\n                    <CampaignPaginationWrapper className=\"campaign-pagination\">\n                        <ReactPaginate\n                            previousLabel={<FontAwesomeIcon icon={faChevronLeft} />}\n                            nextLabel={<FontAwesomeIcon icon={faChevronRight} />}\n                            breakLabel={'...'}\n                            breakClassName={'break-me'}\n                            pageCount={this.state.pageCount}\n                            marginPagesDisplayed={2}\n                            pageRangeDisplayed={5}\n                            forcePage={this.state.curPage}\n                            onPageChange={this.onPaginationClick}\n                            containerClassName={'pagination'}\n                            activeClassName={'active'}\n                        />\n                    </CampaignPaginationWrapper>\n                )}\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state: ReducerStateData) => {\n    return ({\n        appState: state.appState,\n        campaigns: state.campaigns\n    })\n};\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    setDateRange: (data: DateRangeData) => dispatch(setDateRange(data)),\n    setSearchKey: (data: string) => dispatch(setSearchKey(data)),\n    setSnackBarDisplay: (data: SnackBarData) => dispatch(setSnackBarDisplay(data)),\n    setModalPopupDisplay: (data: ModalPopupData) => dispatch(setModalPopupDisplay(data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CampaignList);\n\n\n\n\nconst indicatorPanelWidth = '10rem';\nconst CampaignHeaderWrapper = styled.div`\n    display: flex;\n    width: 100%;\n    padding: ${layout.standardGap};\n    box-sizing: border-box;\n    justify-content: space-between;\n    align-items: center;\n    \n    & .title {\n        width: calc(100% - ${indicatorPanelWidth});\n        \n        & > h2 {\n            margin: 0 0 ${layout.smallGap};\n        }\n        \n        & .description {\n            & > span {\n                font-weight: 700;\n                color: ${colors.primary};\n            }\n        }\n    }\n    \n    & .legend {\n        width: ${indicatorPanelWidth};\n        padding: ${layout.smallGap};\n        border: ${styles.lineStyle};\n        box-sizing: border-box;\n        text-align: center;\n        font-size: ${layout.fontSizeSmall};\n        font-weight: 500;\n        color: ${colors.darkGray};\n        \n        & .legend-title {\n            margin-bottom: ${layout.xSmallGap};\n            font-weight: 700;\n            text-transform: uppercase;\n        }\n        \n        & .legend-row {\n            display: flex;\n            justify-content: space-between;\n            \n            & .col {\n                & .label { }\n            }\n        }\n    }\n    \n    @media screen and (max-width: ${config.mediumScreenWidth}) {\n        display: block;\n        padding: ${layout.standardGap} ${layout.standardGap} ${layout.smallGap};\n    \n        & .title {\n            width: 100%;\n            margin-bottom: ${layout.largeGap};\n        }\n        \n        & .legend {\n            display: flex;\n            margin: 0 auto;\n            width: 14rem;\n        \n            & .legend-title {\n                width: 3rem;\n                margin-bottom: 0;\n                margin-right: ${layout.xSmallGap};\n            }\n            \n            & .legend-row {\n                display: flex;\n                width: calc(100% - 3rem);\n                justify-content: space-between;\n            }\n        }\n    }\n    \n    @media screen and (max-width: ${config.smallScreenWidth}) {        \n        & .legend {\n            display: none;\n        }\n    }\n`;\n\n\ninterface CampaignTableWrapperProps {\n    dataLabels: { [key:string]: string }\n}\n\nconst CampaignTableWrapper = styled.div`\n    width: 100%;\n    padding: 0 ${layout.standardGap} ${layout.standardGap};\n    box-sizing: border-box;\n    \n    & > table {\n        border: 0;\n        width: 100%;\n        border-collapse: collapse;\n        \n        & td {\n            padding: ${layout.smallGap};\n            border-top: ${styles.lineStyle};\n            border-bottom: ${styles.lineStyle};\n            text-align: center;\n        }\n        \n        & > thead {\n            & tr {\n                background-color: ${colors.secondary};\n                \n                & td {\n                    color: ${colors.white};\n                    font-weight: 700;\n                }\n            }\n        }\n        \n        & > tbody {\n            & tr {\n                &:nth-child(odd) {\n                    background-color: ${colors.lightGray};\n                }\n                \n                &:not(.no-result):hover {\n                    background-color: ${colors.lightGray2};\n                }\n            }\n        }\n        \n        & a {\n            text-decoration: underline;\n            cursor: pointer;\n        }\n        \n        & .highlight {\n            margin-bottom: ${layout.smallGap};\n            color: ${colors.red};\n            font-weight: 700;\n        }\n    }\n    \n    @media screen and (max-width: ${config.smallScreenWidth}) {\n        padding: 0 ${layout.standardGap} calc(2 * ${layout.standardGap});\n        \n        & > table {\n            & td {\n                display: block;\n                padding: ${layout.xSmallGap} 0;\n                border: 0;\n                text-align: left;\n                \n                ${(props: CampaignTableWrapperProps) => {\n                    const d = props.dataLabels;\n                    return Object.keys(d).map((key, id) => (css`\n                        &:nth-child(${id+1}) {\n                            &:before {\n                                display: inline-block;\n                                width: 7rem;\n                                font-weight: 700;\n                                content: '${d[key]}: ';\n                            }\n                        }\n                    `));\n                }}\n            }\n            \n            & > thead {\n                display: none;\n            }\n            \n            & > tbody {\n                & tr {\n                    display: block;\n                    padding: ${layout.standardGap};\n                    border: ${styles.lineStyle};\n                }\n            }\n        }\n    }    \n`;\n\nconst CampaignPaginationWrapper = styled.div`\n    width: 100%;\n    padding: 0 ${layout.standardGap} ${layout.standardGap};\n    box-sizing: border-box;\n    \n    & > ul {\n        display: flex;\n        padding: 0;\n        margin: 0;\n        border-top: ${styles.lineStyle};\n        border-bottom: ${styles.lineStyle};\n        list-style: none;\n        justify-content: center;\n        \n        & > li {\n            width: 2.5rem;\n            \n            &:hover {\n                background-color: ${colors.lightGray2};\n            }\n                \n            & > a {\n                display: block;\n                width: 100%;\n                padding: ${layout.smallGap} 0;\n                text-align: center;\n                cursor: pointer;\n                color: ${colors.primary};\n                outline: 0;\n            }\n                        \n            &.active {\n                background-color: ${colors.primary};\n                \n                & > a {\n                    color: ${colors.white};\n                }\n            }\n            \n            &.disabled {\n                cursor: auto;\n                \n                &:hover {\n                    background-color: transparent;\n                }\n                \n                & > a {\n                    color: ${colors.lightGray2};\n                }\n            }\n        }\n    }\n`;","import React, { ReactElement } from 'react';\nimport styled from 'styled-components';\nimport { colors, layout, styles } from \"../../constants/ui\";\nimport { footerString } from \"../../constants/text\";\n\n\nexport const Footer = (): ReactElement => (<>\n    <PadWrapper />\n    <FooterWrapper className=\"footer\">\n        <span>{footerString((new Date()).getFullYear())}</span>\n    </FooterWrapper>\n</>);\n\nconst PadWrapper = styled.div`\n    height: calc(${layout.standardGap} + ${layout.footerBarHeight});\n`;\n\nconst FooterWrapper = styled.footer`\n    position: fixed;\n    bottom: 0;\n    display: block;\n    width: 100%;\n    height: ${layout.footerBarHeight};\n    font-size: ${layout.fontSizeStandard};\n    text-align: center;\n    line-height: ${layout.footerBarHeight};\n    border-top: ${styles.lineStyle};\n    background: ${colors.lightGray}; \n`;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { colors, layout, styles } from \"../../constants/ui\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons/faTimes\";\n\n\ntype ModalPopupProps = {\n    show: boolean,\n    title: string,\n    content: string,\n    close?: () => void\n}\n\nclass ModalPopup extends Component<ModalPopupProps, {}> {\n    constructor(props: ModalPopupProps) {\n        super(props);\n        this.closeHandler = this.closeHandler.bind(this);\n    }\n\n    closeHandler = () => {\n        const { close } = this.props;\n        if(!!close) close();\n    };\n\n    render() {\n        const {\n            show,\n            title,\n            content\n        } = this.props;\n\n        return (\n            <ModalPopupWrapper\n                className={[\n                    'modal-popup',\n                    !!show ? ` show` : '',\n                ].join('')}\n            >\n                <div className=\"bg\" />\n                <div className=\"fg\">\n                    <div className=\"header\">\n                        <div className=\"title\">{title}</div>\n                        <div className=\"close\" onClick={this.closeHandler}>\n                            <FontAwesomeIcon icon={faTimes} size={'lg'} />\n                        </div>\n                    </div>\n                    <div className=\"content\">\n                        <div dangerouslySetInnerHTML={{__html: content}} />\n                    </div>\n                </div>\n            </ModalPopupWrapper>\n        )\n    }\n}\n\nexport default ModalPopup;\n\n\nconst closeSize = '3rem';\nconst ModalPopupWrapper = styled.div`\n    display: none;\n    position: fixed;\n    top: 0;\n    right: 0;\n    width: 100%;\n    height: 100%;\n    justify-content: center;\n    align-items: center;\n    z-index: 5;\n    \n    & > .bg {\n        position: absolute;\n        top: 0;\n        right: 0;\n        width: 100%;\n        height: 100%;\n        background-color: rgba(255, 255, 255, 0.8);\n    }\n    \n    &.show {\n        display: flex;\n    }\n    \n    & > .fg {\n        display: inline-block;\n        position: relative;\n        width: calc(100% - 2 * ${layout.standardGap});\n        height: calc(100% - 2 * ${layout.standardGap});\n        border: ${styles.lineStyle};\n        border-radius: ${layout.borderRadius};\n        box-sizing: border-box;\n        background-color: ${colors.white};\n        \n        & > .header {\n            display: flex;\n            height: ${closeSize};\n            border-bottom: ${styles.lineStyle};\n            justify-content: space-between;\n            align-items: center;\n            \n            & .title {\n                width: calc(100% - ${closeSize});\n                padding: 0 ${layout.standardGap} ;\n                box-sizing: border-box;\n                font-weight: 700;\n                ${styles.textOverflowStyle}\n            }\n            \n            & .close {\n                ${styles.filterBarButtonStyle};\n                display: flex;\n                height: ${closeSize};\n                width: ${closeSize};\n                font-size: ${layout.fontSizeLarge};\n                justify-content: center;\n                align-items: center;\n                cursor: pointer;\n            }\n        }\n        \n        & .content {\n            height: calc(100% - 3rem);\n            padding: ${layout.standardGap};\n            box-sizing: border-box;\n            overflow-y: auto;\n        }\n    }\n`;\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport {\n    appTitle,\n    helpTitleString,\n    noHelpContent\n} from \"./constants/text\";\nimport {\n    CampaignData,\n    DateRangeData, ModalPopupData,\n    ReducerStateData,\n    SnackBarData\n} from \"./models\";\nimport {\n    setDateRange, setModalPopupDisplay,\n    setSearchKey,\n    setSnackBarDisplay,\n    storeCampaignData\n} from \"./actions\";\nimport { Header } from \"./components/Header\";\nimport { FilterBar } from \"./components/FilterBar\";\nimport SnackBar from \"./components/SnackBar\";\nimport CampaignList from \"./components/CampaignList\";\nimport { Footer } from './components/Footer';\nimport ModalPopup from \"./components/ModalPopup\";\n\n\ndeclare global {\n    interface Window {\n        EventQueue: any;\n        AddCampaignsEventName: string;\n        GetHelp: any;\n    }\n}\n\nexport class App extends React.Component<any, any> {\n    constructor(props: any) {\n        super(props);\n\n        this.storeCampaigns = this.storeCampaigns.bind(this);\n    }\n\n    componentDidMount() {\n        if(!!window && !!window.EventQueue) {\n            window.EventQueue.subscribe(window.AddCampaignsEventName, this.storeCampaigns);\n        }\n    }\n\n    storeCampaigns(data: CampaignData[]) {\n        console.log(`${appTitle}: Store campaigns data into redux`);\n\n        const {\n            storeCampaignData,\n            setSearchKey,\n            setDateRange\n        } = this.props;\n\n        setSearchKey('');\n        setDateRange({ startDate: null, endDate: null });\n        storeCampaignData(data);\n    };\n\n    closeSnackBar = () => {\n        const { setSnackBarDisplay } = this.props;\n        setSnackBarDisplay({ show: false });\n    };\n\n    closeModalPopup = () => {\n        const { setModalPopupDisplay } = this.props;\n        setModalPopupDisplay({ show: false });\n    };\n\n    render() {\n        const { appState, campaigns } = this.props;\n        const { snackBarDisplay, modalPopupDisplay } = appState;\n\n        return (\n            <>\n                <Header title={appTitle} />\n                <FilterBar disabled={!campaigns || campaigns.length === 0} />\n                <CampaignList />\n                <Footer />\n\n                <ModalPopup\n                    show={modalPopupDisplay.show}\n                    title={helpTitleString}\n                    content={!!window.GetHelp && typeof window.GetHelp === 'function'\n                        ? window.GetHelp()\n                        : noHelpContent\n                    }\n                    close={this.closeModalPopup}\n                />\n\n                <SnackBar\n                    show={snackBarDisplay.show}\n                    message={snackBarDisplay.message}\n                    close={this.closeSnackBar}\n                />\n            </>\n        );\n    }\n};\n\n\nconst mapStateToProps = (state: ReducerStateData) => {\n    return ({\n        appState: state.appState,\n        campaigns: state.campaigns\n    })\n};\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    setSearchKey: (data: string) => dispatch(setSearchKey(data)),\n    setDateRange: (data: DateRangeData) => dispatch(setDateRange(data)),\n    storeCampaignData: (data: CampaignData[]) => dispatch(storeCampaignData(data)),\n    setSnackBarDisplay: (data: SnackBarData) => dispatch(setSnackBarDisplay(data)),\n    setModalPopupDisplay: (data: ModalPopupData) => dispatch(setModalPopupDisplay(data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { appReducer } from './reducers';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\n\nconst store = createStore(appReducer);\n\nconst Root = (\n    <Provider store={store}>\n        <App />\n    </Provider>\n)\n\nReactDOM.render(Root, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.d40462ed.png\";"],"sourceRoot":""}