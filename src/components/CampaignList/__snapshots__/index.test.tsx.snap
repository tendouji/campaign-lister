// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<DateSelector /> renders without crashing 1`] = `
<CampaignList
  appState={
    Object {
      "dateRange": Object {},
      "searchKey": "",
    }
  }
  campaigns={
    Array [
      Object {
        "budget": 999999,
        "endDate": "12/31/2018",
        "id": 1,
        "name": "Campaign AAA 1",
        "startDate": "1/1/2018",
      },
      Object {
        "budget": 999999,
        "endDate": "12/31/2020",
        "id": 2,
        "name": "Campaign AAA 2",
        "startDate": "1/1/2019",
      },
      Object {
        "budget": 999999,
        "endDate": "12/31/2020",
        "id": 3,
        "name": "Campaign BBB",
        "startDate": "1/1/2019",
      },
    ]
  }
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <styled.div
    className="campaign-header"
  >
    <StyledComponent
      className="campaign-header"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bwzfXH",
            "isStatic": false,
            "lastClassName": "kdbIGY",
            "rules": Array [
              "
    display: flex;
    width: 100%;
    padding: ",
              "1rem",
              ";
    box-sizing: border-box;
    justify-content: space-between;
    align-items: center;
    
    & .title {
        width: calc(100% - ",
              "10rem",
              ");
        
        & > h2 {
            margin: 0 0 ",
              "0.625rem",
              ";
        }
        
        & .description {
            & > span {
                font-weight: 700;
                color: ",
              "#43cadb",
              ";
            }
        }
    }
    
    & .legend {
        width: ",
              "10rem",
              ";
        padding: ",
              "0.625rem",
              ";
        border: ",
              "1px solid #ddd",
              ";
        box-sizing: border-box;
        text-align: center;
        font-size: ",
              "0.75rem",
              ";
        font-weight: 500;
        color: ",
              "#666",
              ";
        
        & .legend-title {
            margin-bottom: ",
              "0.3125rem",
              ";
            font-weight: 700;
            text-transform: uppercase;
        }
        
        & .legend-row {
            display: flex;
            justify-content: space-between;
            
            & .col {
                & .label { }
            }
        }
    }
    
    @media screen and (max-width: ",
              "37.5rem",
              ") {
        display: block;
        padding: ",
              "1rem",
              " ",
              "1rem",
              " ",
              "0.625rem",
              ";
    
        & .title {
            width: 100%;
            margin-bottom: ",
              "1.25rem",
              ";
        }
        
        & .legend {
            display: flex;
            margin: 0 auto;
            width: 14rem;
        
            & .legend-title {
                width: 3rem;
                margin-bottom: 0;
                margin-right: ",
              "0.3125rem",
              ";
            }
            
            & .legend-row {
                display: flex;
                width: calc(100% - 3rem);
                justify-content: space-between;
            }
        }
    }
    
    @media screen and (max-width: ",
              "25rem",
              ") {        
        & .legend {
            display: none;
        }
    }
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bwzfXH",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="sc-bwzfXH kdbIGY campaign-header"
      >
        <div
          className="title"
        >
          <h2>
            Campaign list
          </h2>
          <div
            className="description"
            dangerouslySetInnerHTML={
              Object {
                "__html": "Results for <span>all</span> campaigns (0 entry)",
              }
            }
          />
        </div>
        <div
          className="legend"
        >
          <div
            className="legend-title"
          >
            Status Type
          </div>
          <div
            className="legend-row"
          >
            <div
              className="col"
            >
              <div
                className="label"
              >
                ongoing
              </div>
              <StatusDot
                status="ongoing"
              >
                <styled.span
                  className="status-dot ongoing"
                >
                  <StyledComponent
                    className="status-dot ongoing"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bdVaJa",
                          "isStatic": false,
                          "lastClassName": "GNxtY",
                          "rules": Array [
                            "
    & > span { 
        display: none;
    }

    &.",
                            "ongoing",
                            " {
        color: ",
                            "#4caf50",
                            ";
    }
    
    &.",
                            "ended",
                            " {
        color: ",
                            "#ff2717",
                            ";
    }
    
    &.",
                            "upcoming",
                            " {
        color: ",
                            "#ffc107",
                            ";
    }
    
    @media screen and (max-width: ",
                            "25rem",
                            ") {
        & > span { 
            display: inline-block;
            margin-left: ",
                            "0.3125rem",
                            ";
            line-height: 1rem;
        }
    }    
",
                          ],
                        },
                        "displayName": "styled.span",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bdVaJa",
                        "target": "span",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <span
                      className="sc-bdVaJa GNxtY status-dot ongoing"
                    >
                      <FontAwesomeIcon
                        border={false}
                        className=""
                        fixedWidth={false}
                        flip={null}
                        icon={
                          Object {
                            "icon": Array [
                              512,
                              512,
                              Array [],
                              "f192",
                              "M256 8C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm80 248c0 44.112-35.888 80-80 80s-80-35.888-80-80 35.888-80 80-80 80 35.888 80 80z",
                            ],
                            "iconName": "dot-circle",
                            "prefix": "fas",
                          }
                        }
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size={null}
                        spin={false}
                        swapOpacity={false}
                        symbol={false}
                        title=""
                        transform={null}
                      >
                        <svg
                          aria-hidden="true"
                          className="svg-inline--fa fa-dot-circle fa-w-16 "
                          data-icon="dot-circle"
                          data-prefix="fas"
                          focusable="false"
                          role="img"
                          style={Object {}}
                          viewBox="0 0 512 512"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M256 8C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm80 248c0 44.112-35.888 80-80 80s-80-35.888-80-80 35.888-80 80-80 80 35.888 80 80z"
                            fill="currentColor"
                            style={Object {}}
                          />
                        </svg>
                      </FontAwesomeIcon>
                      <span>
                        ongoing
                      </span>
                    </span>
                  </StyledComponent>
                </styled.span>
              </StatusDot>
            </div>
            <div
              className="col"
            >
              <div
                className="label"
              >
                ended
              </div>
              <StatusDot
                status="ended"
              >
                <styled.span
                  className="status-dot ended"
                >
                  <StyledComponent
                    className="status-dot ended"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bdVaJa",
                          "isStatic": false,
                          "lastClassName": "GNxtY",
                          "rules": Array [
                            "
    & > span { 
        display: none;
    }

    &.",
                            "ongoing",
                            " {
        color: ",
                            "#4caf50",
                            ";
    }
    
    &.",
                            "ended",
                            " {
        color: ",
                            "#ff2717",
                            ";
    }
    
    &.",
                            "upcoming",
                            " {
        color: ",
                            "#ffc107",
                            ";
    }
    
    @media screen and (max-width: ",
                            "25rem",
                            ") {
        & > span { 
            display: inline-block;
            margin-left: ",
                            "0.3125rem",
                            ";
            line-height: 1rem;
        }
    }    
",
                          ],
                        },
                        "displayName": "styled.span",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bdVaJa",
                        "target": "span",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <span
                      className="sc-bdVaJa GNxtY status-dot ended"
                    >
                      <FontAwesomeIcon
                        border={false}
                        className=""
                        fixedWidth={false}
                        flip={null}
                        icon={
                          Object {
                            "icon": Array [
                              512,
                              512,
                              Array [],
                              "f192",
                              "M256 8C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm80 248c0 44.112-35.888 80-80 80s-80-35.888-80-80 35.888-80 80-80 80 35.888 80 80z",
                            ],
                            "iconName": "dot-circle",
                            "prefix": "fas",
                          }
                        }
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size={null}
                        spin={false}
                        swapOpacity={false}
                        symbol={false}
                        title=""
                        transform={null}
                      >
                        <svg
                          aria-hidden="true"
                          className="svg-inline--fa fa-dot-circle fa-w-16 "
                          data-icon="dot-circle"
                          data-prefix="fas"
                          focusable="false"
                          role="img"
                          style={Object {}}
                          viewBox="0 0 512 512"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M256 8C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm80 248c0 44.112-35.888 80-80 80s-80-35.888-80-80 35.888-80 80-80 80 35.888 80 80z"
                            fill="currentColor"
                            style={Object {}}
                          />
                        </svg>
                      </FontAwesomeIcon>
                      <span>
                        ended
                      </span>
                    </span>
                  </StyledComponent>
                </styled.span>
              </StatusDot>
            </div>
            <div
              className="col"
            >
              <div
                className="label"
              >
                upcoming
              </div>
              <StatusDot
                status="upcoming"
              >
                <styled.span
                  className="status-dot upcoming"
                >
                  <StyledComponent
                    className="status-dot upcoming"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bdVaJa",
                          "isStatic": false,
                          "lastClassName": "GNxtY",
                          "rules": Array [
                            "
    & > span { 
        display: none;
    }

    &.",
                            "ongoing",
                            " {
        color: ",
                            "#4caf50",
                            ";
    }
    
    &.",
                            "ended",
                            " {
        color: ",
                            "#ff2717",
                            ";
    }
    
    &.",
                            "upcoming",
                            " {
        color: ",
                            "#ffc107",
                            ";
    }
    
    @media screen and (max-width: ",
                            "25rem",
                            ") {
        & > span { 
            display: inline-block;
            margin-left: ",
                            "0.3125rem",
                            ";
            line-height: 1rem;
        }
    }    
",
                          ],
                        },
                        "displayName": "styled.span",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bdVaJa",
                        "target": "span",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <span
                      className="sc-bdVaJa GNxtY status-dot upcoming"
                    >
                      <FontAwesomeIcon
                        border={false}
                        className=""
                        fixedWidth={false}
                        flip={null}
                        icon={
                          Object {
                            "icon": Array [
                              512,
                              512,
                              Array [],
                              "f192",
                              "M256 8C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm80 248c0 44.112-35.888 80-80 80s-80-35.888-80-80 35.888-80 80-80 80 35.888 80 80z",
                            ],
                            "iconName": "dot-circle",
                            "prefix": "fas",
                          }
                        }
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size={null}
                        spin={false}
                        swapOpacity={false}
                        symbol={false}
                        title=""
                        transform={null}
                      >
                        <svg
                          aria-hidden="true"
                          className="svg-inline--fa fa-dot-circle fa-w-16 "
                          data-icon="dot-circle"
                          data-prefix="fas"
                          focusable="false"
                          role="img"
                          style={Object {}}
                          viewBox="0 0 512 512"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M256 8C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm80 248c0 44.112-35.888 80-80 80s-80-35.888-80-80 35.888-80 80-80 80 35.888 80 80z"
                            fill="currentColor"
                            style={Object {}}
                          />
                        </svg>
                      </FontAwesomeIcon>
                      <span>
                        upcoming
                      </span>
                    </span>
                  </StyledComponent>
                </styled.span>
              </StatusDot>
            </div>
          </div>
        </div>
      </div>
    </StyledComponent>
  </styled.div>
  <styled.div
    className="campaign-table"
    dataLabels={
      Object {
        "budget": "Budget (USD)",
        "endDate": "End Date",
        "name": "Name",
        "startDate": "Start Date",
        "status": "Status",
      }
    }
  >
    <StyledComponent
      className="campaign-table"
      dataLabels={
        Object {
          "budget": "Budget (USD)",
          "endDate": "End Date",
          "name": "Name",
          "startDate": "Start Date",
          "status": "Status",
        }
      }
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-htpNat",
            "isStatic": false,
            "lastClassName": "jhCusW",
            "rules": Array [
              "
    width: 100%;
    padding: 0 ",
              "1rem",
              " ",
              "1rem",
              ";
    box-sizing: border-box;
    
    & > table {
        border: 0;
        width: 100%;
        border-collapse: collapse;
        
        & td {
            padding: ",
              "0.625rem",
              ";
            border-top: ",
              "1px solid #ddd",
              ";
            border-bottom: ",
              "1px solid #ddd",
              ";
            text-align: center;
        }
        
        & > thead {
            & tr {
                background-color: ",
              "#595caf",
              ";
                
                & td {
                    color: ",
              "#fff",
              ";
                    font-weight: 700;
                }
            }
        }
        
        & > tbody {
            & tr {
                &:nth-child(odd) {
                    background-color: ",
              "#f6f6f6",
              ";
                }
                
                &:not(.no-result):hover {
                    background-color: ",
              "#eee",
              ";
                }
            }
        }
        
        & a {
            text-decoration: underline;
            cursor: pointer;
        }
        
        & .highlight {
            margin-bottom: ",
              "0.625rem",
              ";
            color: ",
              "#ff2717",
              ";
            font-weight: 700;
        }
    }
    
    @media screen and (max-width: ",
              "25rem",
              ") {
        padding: 0 ",
              "1rem",
              " calc(2 * ",
              "1rem",
              ");
        
        & > table {
            & td {
                display: block;
                padding: ",
              "0.3125rem",
              " 0;
                border: 0;
                text-align: left;
                
                ",
              [Function],
              "
            }
            
            & > thead {
                display: none;
            }
            
            & > tbody {
                & tr {
                    display: block;
                    padding: ",
              "1rem",
              ";
                    border: ",
              "1px solid #ddd",
              ";
                }
            }
        }
    }    
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-htpNat",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="sc-htpNat jhCusW campaign-table"
      >
        <table>
          <thead>
            <tr>
              <td
                key="name"
              >
                Name
              </td>
              <td
                key="startDate"
              >
                Start Date
              </td>
              <td
                key="endDate"
              >
                End Date
              </td>
              <td
                key="budget"
              >
                Budget (USD)
              </td>
              <td
                key="status"
              >
                Status
              </td>
            </tr>
          </thead>
          <tbody>
            <tr
              className="no-result"
            >
              <td
                colSpan={5}
              >
                <div
                  className="highlight"
                >
                  No campaigns available.
                </div>
                Click 
                <a
                  href="#"
                  onClick={[Function]}
                >
                  here
                </a>
                 to learn how to add new campaigns via Web Development tools.
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </StyledComponent>
  </styled.div>
</CampaignList>
`;
